library(readxl)
dataIn <-loadWorkbook(file.path(f.list[1], sep=""))
sheet <- getsheets(dataIn)
library(readxl)
#f.list <- choose.files()
dataIn <-loadWorkbook(file.path(f.list[1], sep=""))
dataIn <-read_xlsx(file.path(f.list[1], sep=""))
sheet <- excel_sheets(dataIn)
read_xlsx(file.path(f.list[1], sep=""))
read_xls(file.path(f.list[1], sep=""))
source('~/.active-rstudio-document')
f.list[1]
read_xls(f.list[1], sep="")
#f.list <- choose.files()
dataIn <- read_xls(f.list[1])
read_excel(f.list[1])
install.packages("XLConnect")
library("XLConnect", lib.loc="~/R/win-library/3.5")
loadWorkbook(f.list[1])
dataIn <- loadWorkbook(f.list[1])
View(dataIn)
getsheets(dataIn)
sheet <- readWorksheet(dataIn, sheet = getSheets(dataIn), startRow=1, startCol=1, header=TRUE)
View(sheet)
sheetNames <- getsheets(dataIn)
getSheets(dataIn)
i<-1
source('~/.active-rstudio-document', encoding = 'UTF-8')
readWorksheet(dataIn, sheet = m, startRow=5, startCol=1, header=F)
strsplit(f.list[i]),"_")[2]
basename(strsplit(f.list[i]),"_")[2]
strsplit(basename(f.list[i],"_"))[2]
strsplit(basename(f.list[i]),"_")[2]
strsplit(basename(f.list[i]),"_")[[1]][2]
strsplit(strsplit(basename(f.list[i]),"_")[[1]][2]),".xlsx")
strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xlsx")
strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")
if (as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1){
months <- months1
}else{
months <- months2
}
for (m in months){
table <- readWorksheet(dataIn, sheet = m, startRow=5, startCol=1, header=F)
}
months1 <- c("Januar","Februar","März","April","Mai","Juni")
months2 <- c("Juli","August","September","Oktober","Novemeber","Dezember")
if (as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1){
months <- months1
}else{
months <- months2
}
for (m in months){
table <- readWorksheet(dataIn, sheet = m, startRow=5, startCol=1, header=F)
}
dataIn <- loadWorkbook(f.list[i])
sheet <- readWorksheet(dataIn, sheet = getSheets(dataIn), startRow=1, startCol=1, header=TRUE)
sheetNames <- getSheets(dataIn)
months1 <- c("Januar","Februar","März","April","Mai","Juni")
months2 <- c("Juli","August","September","Oktober","Novemeber","Dezember")
if (as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1){
months <- months1
}else{
months <- months2
}
for (m in months){
if (m=="Januar"){
table.final <- readWorksheet(dataIn, sheet = m, startRow=5, startCol=1, header=F)
}else{
table <- readWorksheet(dataIn, sheet = m, startRow=5, startCol=1, header=F)
table.final <- rbind(table.final,table)
}
}
View(table.final)
m
readWorksheet(dataIn, sheet = m, startRow=5, startCol=1, header=F)
table <- readWorksheet(dataIn, sheet = m, startRow=5, startCol=1, header=F)
table.final <- rbind(table.final,table)
dataIn <- loadWorkbook(f.list[i])
sheet <- readWorksheet(dataIn, sheet = getSheets(dataIn), startRow=1, startCol=1, header=TRUE)
sheetNames <- getSheets(dataIn)
months1 <- c("Januar","Februar","März","April","Mai","Juni")
months2 <- c("Juli","August","September","Oktober","Novemeber","Dezember")
if (as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1){
months <- months1
}else{
months <- months2
}
for (m in months){
if (m=="Januar"){
table.final <- readWorksheet(dataIn, sheet = m, startRow=4, startCol=1, header=F,endCol = 13)
}else{
table <- readWorksheet(dataIn, sheet = m, startRow=4, startCol=1, header=F,endCol = 13)
table.final <- rbind(table.final,table)
}
}
View(table.final)
m
View(table)
strsplit(basename(f.list[i]),"_")[[1]][1]
year <- strsplit(basename(f.list[i]),"_")[[1]][1]
dataIn <- loadWorkbook(f.list[i])
sheet <- readWorksheet(dataIn, sheet = getSheets(dataIn), startRow=1, startCol=1, header=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
i
year
months
months.numeric[months==m]
months.numeric
if (as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1){
months <- months1
months.numeric <- months1.numeric
}else{
months <- months2
months.numeric <- months2.numeric
}
sheet <- readWorksheet(dataIn, sheet = getSheets(dataIn), startRow=1, startCol=1, header=TRUE)
as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1
months1.numeric <- 1:6
i
dataIn <- loadWorkbook(f.list[i])
year <- strsplit(basename(f.list[i]),"_")[[1]][1]
dataIn <- loadWorkbook(f.list[i])
#sheet <- readWorksheet(dataIn, sheet = getSheets(dataIn), startRow=1, startCol=1, header=TRUE)
#sheetNames <- getSheets(dataIn)
months1 <- c("Januar","Februar","März","April","Mai","Juni")
months1.numeric <- 1:6
months2 <- c("Juli","August","September","Oktober","Novemeber","Dezember")
months2.numeric <- 7:12
if (as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1){
months <- months1
months.numeric <- months1.numeric
}else{
months <- months2
months.numeric <- months2.numeric
}
for (m in months){
month <- months.numeric[months==m]
table <- readWorksheet(dataIn, sheet = m, startRow=4, startCol=1, header=F,endCol = 13)
for (n in 1:nrow(table)){
if (!is.na(table[n,1])){
day <- table[n,1]
}else{
day <- day
}
date <- paste(year,"-",as.character(month),"-",as.character(day)," ",format(strptime(table[n,2],"%H:%M:%S"),'%H:%M:%S'))
table$date[n]<-date
}
if (m=="Januar"){
table.final <- table
}else{
table.final <- rbind(table.final,table)
}
}
View(table.final)
format(strptime(table[n,2],"%H:%M:%S"),'%H:%M:%S')
table[n,2]
strptime(table[n,2],"%H:%M:%S")
as.POSIXct(strptime(table[n,2],"%H:%M:%S"))
as.POSIXct(table[n,2],"%H:%M:%S")
format(as.POSIXct(table[n,2],tz="UTC"),"%H:%M:%S"))
format(as.POSIXct(table[n,2],tz="UTC"),"%H:%M:%S")
source('~/.active-rstudio-document', encoding = 'UTF-8')
View(table.final)
source('~/.active-rstudio-document', encoding = 'UTF-8')
-is.na(table[,2])
is.integer0(is.na(table[,2]))
is.integer0 <- function(x)
{
is.integer(x) && length(x) == 0L
}
is.integer0(is.na(table[,2]))
source('~/.active-rstudio-document', encoding = 'UTF-8')
View(table.final)
format(as.POSIXct(table[n,2],tz="UTC"),"%H:%M:%S"))
as.POSIXct(paste(year,"-",as.character(month),sep=""),tz="UTC"),"%H:%M")
as.POSIXct(paste(year,"-",as.character(month),sep=""),tz="UTC",format="%H:%M")
as.POSIXct(strptime(paste(year,"-",as.character(month),sep=""),format="%H:%M",tz="UTC"),tz="UTC")
strptime(paste(year,"-",as.character(month),sep=""),format="%H:%M",tz="UTC")
month
year
as.POSIXct(strptime(paste(year,"-",as.character(month),sep=""),format="%Y-%M",tz="UTC"),tz="UTC")
as.POSIXct(strptime(paste(year,"-",as.character(month),sep=""),format="%Y-%m",tz="UTC"),tz="UTC")
paste(year,"-",as.character(month),sep="")
strptime(paste(year,"-",as.character(month),sep=""),format="%Y-%m",tz="UTC")
as.POSIXct(strptime(paste(year,"-",as.character(month),"-1",sep=""),format="%Y-%m-%d",tz="UTC"),tz="UTC")
date + (day-1)*86400
date + (as.numeric(day)-1)*86400
date <- as.POSIXct(strptime(paste(year,"-",as.character(month),"-1",sep=""),format="%Y-%m-%d",tz="UTC"),tz="UTC")
date + (as.numeric(day)-1)*86400
day
time <- format(as.POSIXct(table[n,2],tz="UTC"),"%H:%M:%S")
date + (as.numeric(day)-1)*86400 + time
time
format(as.POSIXct(table[n,2],tz="UTC"),"%H:%M:%S")
table[n,2]
if(is.integer0(is.na(table[,2]))){
}else{
table <- table[-is.na(table[,2]),]
}
format(as.POSIXct(table[n,2],tz="UTC"),"%H:%M:%S")
table[n,2]
source('~/.active-rstudio-document', encoding = 'UTF-8')
year <- strsplit(basename(f.list[i]),"_")[[1]][1]
dataIn <- loadWorkbook(f.list[i])
#sheet <- readWorksheet(dataIn, sheet = getSheets(dataIn), startRow=1, startCol=1, header=TRUE)
#sheetNames <- getSheets(dataIn)
months1 <- c("Januar","Februar","März","April","Mai","Juni")
months1.numeric <- 1:6
months2 <- c("Juli","August","September","Oktober","Novemeber","Dezember")
months2.numeric <- 7:12
if (as.numeric(strsplit(strsplit(basename(f.list[i]),"_")[[1]][2],".xls")[[1]][1])==1){
months <- months1
months.numeric <- months1.numeric
}else{
months <- months2
months.numeric <- months2.numeric
}
for (m in months){
month <- months.numeric[months==m]
table <- readWorksheet(dataIn, sheet = m, startRow=4, startCol=1, header=F,endCol = 13)
if(is.integer0(is.na(table[,2]))){
}else{
table <- table[-is.na(table[,2]),]
}
for (n in 1:nrow(table)){
time <- format(as.POSIXct(table[n,2],tz="UTC"),"%H:%M:%S")
date <- as.POSIXct(strptime(paste(year,"-",as.character(month),"-1",sep=""),format="%Y-%m-%d",tz="UTC"),tz="UTC")
if (!is.na(table[n,1])){
day <- table[n,1]
}
date <- date + (as.numeric(day)-1)*86400 + time
table$date[n]<-date
}
if (m=="Januar"){
table.final <- table
}else{
table.final <- rbind(table.final,table)
}
}
source('~/.active-rstudio-document')
windRose(meteo,ws = "ws",wd="wd",angle = 10,cols = "heat")
# Meteo Melpitz
library(openair)
windRose(meteo,ws = "ws",wd="wd",angle = 10,cols = "heat")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
summaryPlot(meteo)
source('~/.active-rstudio-document')
corPlot(meteo,type = "year")
corPlot(meteo,type = "year",cluster = F)
res<-corPlot(meteo,type = "year")
plot(res$clust)
res<-corPlot(meteo)
plot(res$clust)
timeVariation(meteo)
trendLevel(meteo, pollutant=”O3”)
trendLevel(meteo, pol="O3")
timeVariation(meteo, pollutant=c("NO", "NO2", "O3"))
timeVariation(meteo, pollutant=c("NO", "NO2", "O3"),type = "year")
source('~/.active-rstudio-document')
meteo <- read.table("file:///X:/p3_working/SDuesing-home/Data/MeteoMelpitz/2015-2018_all.dat",header = T,sep="\t",na.strings = "")
meteo$date <- as.POSIXct(strptime(meteo$date,format = "%Y-%m-%d %H:%M:%S",tz="UTC"),tz="UTC")
timeVariation(meteo)
timeVariation(meteo, pollutant=c("NO", "NO2", "O3"),type = "year")
windRose(meteo,ws = "ws",wd="wd",angle = 10,cols = "jet",type = "season",breaks = 0:17)
polarAnnulus(meteo,pollutant = "ws")
summaryPlot(meteo,type = "density")
res<-corPlot(meteo)
corPlot(meteo,type = "season")
corPlot(meteo,type = "year")
plot(res$clust)
trendLevel(meteo, pol="O3") # daily variation of mean of a pollutant across months
res.cor <- cor(t(meteo), method = "pearson")
d.cor <- as.dist(1 - res.cor)
plot(hclust(d.cor, method = "ward.D2"), cex = 0.6)
View(meteo)
res.cor <- cor(t(meteo[,2:ncol(meteo)]), method = "pearson")
d.cor <- as.dist(1 - res.cor)
plot(hclust(d.cor, method = "ward.D2"), cex = 0.6)
meteo[,2:ncol(meteo)]
cor(t(meteo[,2:ncol(meteo)]), method = "pearson")
cor(meteo[,2:ncol(meteo)], method = "pearson")
res.cor <- cor(meteo[,2:ncol(meteo)], method = "pearson")
d.cor <- as.dist(1 - res.cor)
plot(hclust(d.cor, method = "ward.D2"), cex = 0.6)
d.cor <- as.dist(1 - res.cor)
plot(hclust(d.cor, method = "ward.D2"), cex = 0.6)
cor(meteo[complete.cases(meteo),2:ncol(meteo)], method = "pearson")
res.cor <- cor(meteo[complete.cases(meteo),2:ncol(meteo)], method = "pearson")
d.cor <- as.dist(1 - res.cor)
plot(hclust(d.cor, method = "ward.D2"), cex = 0.6)
install.packages("gplots")
library("gplots")
heatmap.2(meteo, scale = "none", col = bluered(100),
trace = "none", density.info = "none")
heatmap.2(meteometeo[complete.cases(meteo),2:ncol(meteo)], scale = "none", col = bluered(100),
trace = "none", density.info = "none")
heatmap.2(meteo[complete.cases(meteo),2:ncol(meteo)], scale = "none", col = bluered(100),
trace = "none", density.info = "none")
heatmap.2(as.matrix(meteo[complete.cases(meteo),2:ncol(meteo)]), scale = "none", col = bluered(100),
trace = "none", density.info = "none")
meteo[complete.cases(meteo),2:ncol(meteo)]
heatmap.2(as.matrix(meteo[complete.cases(meteo),2:ncol(meteo)]))
dist(meteo)
dist(as.matrix(meteo[complete.cases(meteo),2:ncol(meteo)]))
complete.cases(meteo)
dist(as.matrix(meteo[complete.cases(meteo),2:ncol(meteo)]))
windRose(meteo,ws = "ws",wd="wd",angle = 10,cols = "jet",type = "season",breaks = 0:17)
windRose(meteo,ws = "ws",wd="wd",angle = 10,cols = "jet",type = "year",breaks = 0:17)
windRose(meteo,ws = "ws",wd="wd",angle = 30,cols = "jet",type = "season",breaks = 0:17)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = 0:17)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2))
polarAnnulus(meteo,pollutant = "ws")
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 0)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "left")
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right")
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose")
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = T)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F,family="serif",pointsize=12)
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F,par.settings=list(fontsize=list(text=18),family(="serif"))))
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F,par.settings=list(fontsize=list(text=18),family="serif"))
png("windrose_2015-2018_melpitz.png",res=300,width=12,height=12,family = "serif",pointsize = 12,units = "cm",bg = "transparent")
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F)
dev.off()
getwd()
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F,pollutant = "NO2")
polarAnnulus(meteo,pollutant = "NO2")
round_date(as.POSIXct(strptime(meteo$date,format = "%Y-%m-%d %H:%M:%S",tz="UTC"),tz="UTC"),"30 minutes"
)
meteo$date <- lubridate::round_date(as.POSIXct(strptime(meteo$date,format = "%Y-%m-%d %H:%M:%S",tz="UTC"),tz="UTC"),"30 minutes")
View(meteo)
lubridate::round_date(as.POSIXct(strptime(meteo$date,format = "%Y-%m-%d %H:%M:%S",tz="UTC"),tz="UTC"),"30 minutes")-30*60
meteo$date <- lubridate::round_date(as.POSIXct(strptime(meteo$date,format = "%Y-%m-%d %H:%M:%S",tz="UTC"),tz="UTC"),"30 minutes")-30*60
meteo<- timeAverage(meteo,"1 hour")
View(meteo)
png("windrose_2015-2018_melpitz.png",res=300,width=12,height=12,family = "serif",pointsize = 12,units = "cm",bg = "transparent")
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F,pollutant = "NO2")
dev.off()
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F)
png("windrose_2015-2018_melpitz.png",res=300,width=12,height=12,family = "serif",pointsize = 12,units = "cm",bg = "transparent")
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F)
dev.off()
png("windrose_2015-2018_melpitz.png",res=300,width=12,height=12,family = "serif",pointsize = 12,units = "cm",bg = "transparent")
par(oma=c(0,0,0,0))
windRose(meteo,ws = "ws",wd="wd",angle = 5,cols = "jet",breaks = seq(0,16,2),width = 1.5,offset = 5,paddle = F,key.position = "right",header = "wind rose",annotate = F)
dev.off()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
f <- "file:///X:/p3_working/SDuesing-home/Data/MelCol-Winter/data/2017-02-09/20170209FinishedRaw/Teensy_20170209_111853_STAPandOtherStuff_cleared.dat"
table.stap.winter <- read.table(f,header = T,sep="\t")
table.stap.winter$date <- as.POSIXct(strptime(table.stap.winter$date,format = "%Y-%m-%d %H:%M:%S", tz="UTC"),tz="UTC")
table.stap.winter$recalcRed[2:nrow(table.stap.winter)] <- absorption(smp=table.stap.winter$r_smp,ref=table.stap.winter$r_ref,blk.smp = table.stap.winter$blk_smp,blk.ref = table.stap.winter$blk_ref,smp.p = table.stap.winter$smp_prs,smp.t = table.stap.winter$smp_tmp,smp.flw = table.stap.winter$smp_flw,I0.ref = 800830,I0.smp = 737678,I0.blk.ref =20055,I0.blk.smp=14281,withBlack = T,tau.use = T,stp = T)
#table.stap.winter$recalcRed[table.stap.winter$recalcRed==0] <- NA
table.stap.winter$recalcRed <- as.numeric(table.stap.winter$recalcRed)
table.stap.winter <- openair::rollingMean(table.stap.winter,pollutant = "recalcRed",width = 60,align = "right",data.thresh = 0)
table.stap.winter$diff.Rh[2:nrow(table.stap.winter)] <- table.stap.winter$RH2[2:nrow(table.stap.winter)] - table.stap.winter$RH2[1:(nrow(table.stap.winter)-1)]
table.stap.winter$corr.red <- table.stap.winter$diff.Rh*10.08
table.stap.winter$corr.red.applied <- table.stap.winter$recalcRed-(0.046432*table.stap.winter$diff.Rh^3+6.94*table.stap.winter$diff.Rh)
table.stap.winter$corr.red.applied2 <- table.stap.winter$recalcRed-table.stap.winter$diff.Rh*10.08
for (k in 2:nrow(table.stap.winter)) {
if (is.na(table.stap.winter$r_smp[k]) | is.na(table.stap.winter$r_smp[k - 1])) {
} else{
if (table.stap.winter$r_smp[k] == table.stap.winter$r_smp[k - 1]) {
#table.new$recalc.red[k]<-NA
#table.stap.winter$red_smp[k] <- NA
#table.stap.winter$red_ref[k] <- NA
} else{
}
}
}
table.stap.winter <- openair::rollingMean(table.stap.winter,pollutant = "corr.red.applied",width = 60,align = "right",data.thresh = 0)
table.stap.winter <- openair::rollingMean(table.stap.winter,pollutant = "corr.red.applied2",width = 60,align = "left",data.thresh = 0)
png("absorption_2017-02-09_RHcoerrected.png",width = 20,height=10,units="cm",family = "serif",pointsize = 12,bg="transparent",res=300)
par(mfrow=c(2,1),oma=c(4,5,1,1),mar=rep(0.5,4))
plot(table.stap.winter$RH2,col="blue",type="n",ylim=c(0,85),xaxt="n",yaxt="n",xlab=NA,ylab=NA,xaxs="i",yaxs="i")
abline(h=seq(0,25,5),v=seq(1000,7000,1000),col="gray",lty=1)
lines(table.stap.winter$RH2,col="blue",lwd=2)
lines(table.stap.winter$RH1,col="lightblue",lwd=2)
axis(1,tck=0.04,las=1,cex.axis=1.2,labels=F)
axis(2,tck=0.04,las=1,cex.axis=1.2)
mtext(side=2,expression(paste(italic("rh")," [%]")),line=3,cex=1.5)
box()
#par(new=T)
#lines(table.stap.winter$RH1,xlim=c(1000,7000),col="royalblue")
plot(table.stap.winter$rolling60recalcRed,col="red",type="n",ylim=c(0,40),xaxs="i",yaxs="i",xaxt="n",yaxt="n",xlab=NA,ylab=NA)
#lines(table.stap.winter$invmm_r,col="red")
abline(h=seq(-1,4,1),v=seq(1000,7000,1000),col="gray",lty=1)
lines(table.stap.winter$rolling60recalcRed,col="red",lwd=2)
lines(table.stap.winter$rolling60corr.red.applied,col="black",lwd=2)
#lines(table.stap.winter$rolling60corr.red.applied2,col="blue",lwd=2)
mtext(side=1,expression(paste(italic("time")," [s]")),line=3,cex=1.5)
mtext(side=2,expression(paste(italic(sigma)["abs"]," [Mm"^-1,"]")),line=3,cex=1.5)
axis(1,tck=0.04,las=1,cex.axis=1.2)
axis(2,tck=0.04,las=1,cex.axis=1.2)
legend("topleft",legend=c("rh uncorrected","rh corrected"),bty="n",lty=1,col=c("red","black"),lwd=2,cex=1.2)
box()
dev.off()
f <- "file:///X:/p3_working/SDuesing-home/Data/MelCol-Winter/data/2017-03-09/20170309FinishedRaw/2017-03-09_MergedSTAPTeensybyDate.dat"
table.stap.winter <- read.table(f,header = T,sep="\t")
table.stap.winter$date <- as.POSIXct(strptime(table.stap.winter$date,format = "%Y-%m-%d %H:%M:%S", tz="UTC"),tz="UTC")
table.stap.winter$recalcRed[2:nrow(table.stap.winter)] <- absorption(smp=table.stap.winter$red_smp,ref=table.stap.winter$red_ref,blk.smp = table.stap.winter$blk_smp.y,blk.ref = table.stap.winter$blk_ref.y,smp.p = table.stap.winter$smp_prs.y,smp.t = table.stap.winter$smp_tmp.y,smp.flw = table.stap.winter$smp_flw.y,I0.ref = 805085,I0.smp = 790737,I0.blk.ref = 1088,I0.blk.smp=1301,withBlack = T,tau.use = T,stp = T)
table.stap.winter$recalcRed[table.stap.winter$recalcRed==0] <- NA
table.stap.winter$recalcRed <- as.numeric(table.stap.winter$recalcRed)
table.stap.winter <- openair::rollingMean(table.stap.winter,pollutant = "recalcRed",width = 60,align = "right",data.thresh = 0)
table.stap.winter$diff.Rh[2:nrow(table.stap.winter)] <- table.stap.winter$RH2[2:nrow(table.stap.winter)] - table.stap.winter$RH2[1:(nrow(table.stap.winter)-1)]
table.stap.winter$corr.red <- table.stap.winter$diff.Rh*10.08
table.stap.winter$corr.red.applied <- table.stap.winter$recalcRed-(0.046432*table.stap.winter$diff.Rh^3+6.94*table.stap.winter$diff.Rh)
table.stap.winter$corr.red.applied2 <- table.stap.winter$recalcRed-table.stap.winter$diff.Rh*10.08
for (k in 2:nrow(table.stap.winter)) {
if (is.na(table.stap.winter$red_smp[k]) | is.na(table.stap.winter$red_smp[k - 1])) {
} else{
if (table.stap.winter$red_smp[k] == table.stap.winter$red_smp[k - 1]) {
#table.new$recalc.red[k]<-NA
#table.stap.winter$red_smp[k] <- NA
#table.stap.winter$red_ref[k] <- NA
} else{
}
}
}
table.stap.winter <- openair::rollingMean(table.stap.winter,pollutant = "corr.red.applied",width = 60,align = "right",data.thresh = 0)
table.stap.winter <- openair::rollingMean(table.stap.winter,pollutant = "corr.red.applied2",width = 60,align = "left",data.thresh = 0)
png("absorption_2017-03-09_RHcoerrected.png",width = 20,height=10,units="cm",family = "serif",pointsize = 12,bg="transparent",res=300)
par(mfrow=c(2,1),oma=c(4,5,1,1),mar=rep(0.5,4))
plot(table.stap.winter$RH2,xlim=c(1000,7000),col="blue",type="n",ylim=c(0,25),xaxt="n",yaxt="n",xlab=NA,ylab=NA,xaxs="i",yaxs="i")
abline(h=seq(0,25,5),v=seq(1000,7000,1000),col="gray",lty=1)
lines(table.stap.winter$RH2,col="blue",lwd=2)
axis(1,tck=0.04,las=1,cex.axis=1.2,labels=F)
axis(2,tck=0.04,las=1,cex.axis=1.2)
mtext(side=2,expression(paste(italic("rh")," [%]")),line=3,cex=1.5)
box()
#par(new=T)
#lines(table.stap.winter$RH1,xlim=c(1000,7000),col="royalblue")
plot(table.stap.winter$rolling60recalcRed,col="red",type="n",ylim=c(-1,4),xaxs="i",yaxs="i",xlim=c(1000,7000),xaxt="n",yaxt="n",xlab=NA,ylab=NA)
#lines(table.stap.winter$invmm_r,col="red")
abline(h=seq(-1,4,1),v=seq(1000,7000,1000),col="gray",lty=1)
lines(table.stap.winter$rolling60recalcRed,col="red",lwd=2)
lines(table.stap.winter$rolling60corr.red.applied,col="black",lwd=2)
#lines(table.stap.winter$rolling60corr.red.applied2,col="blue",lwd=2)
mtext(side=1,expression(paste(italic("time")," [s]")),line=3,cex=1.5)
mtext(side=2,expression(paste(italic(sigma)["abs"]," [Mm"^-1,"]")),line=3,cex=1.5)
axis(1,tck=0.04,las=1,cex.axis=1.2)
axis(2,tck=0.04,las=1,cex.axis=1.2)
legend("topleft",legend=c("rh uncorrected","rh corrected"),bty="n",lty=1,col=c("red","black"),lwd=2,cex=1.2)
box()
dev.off()
reverse <- function(string){
list <- strsplit(string,".")
list <- unlist(list)
resultString <- ""
for (k in length(list):1){
resultString <- paste(resultString,list[k],"")
}
return(resultString)
}
reverse("golem")
strsplit("golem",".")
strsplit("golem","")
reverse <- function(string){
list <- strsplit(string,"")
list <- unlist(list)
resultString <- ""
for (k in length(list):1){
resultString <- paste(resultString,list[k],"")
}
return(resultString)
}
reverse("golem")
unlist(strsplit("golem",""))
unlist(strsplit("golem",""))[1]
unlist(strsplit("golem",""))[2]
paste(unlist(strsplit("golem",""))[1],unlist(strsplit("golem",""))[2],"")
paste(unlist(strsplit("golem",""))[1],unlist(strsplit("golem",""))[2])
paste(unlist(strsplit("golem",""))[1],unlist(strsplit("golem",""))[2],NULL)
paste(unlist(strsplit("golem",""))[1],unlist(strsplit("golem",""))[2])
String(reverse("golem"))
collapse(paste(unlist(strsplit("golem",""))[1],unlist(strsplit("golem",""))[2]))
paste(unlist(strsplit("golem",""))[1],unlist(strsplit("golem",""))[2],collapse = T)
paste(unlist(strsplit("golem",""))[1],unlist(strsplit("golem",""))[2],collapse = "")
strsplit("string","")
strsplit("string","")[[1]]
getwd()
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
getwd()
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
source('C:/Users/duesing/PycharmProjects/CompareGroundWithACTOS/runPython.R')
